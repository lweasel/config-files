# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend
shopt -s cmdhist

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=100000
HISTFILESIZE=100000

# git aliases
alias gs='git status'
alias gc='git commit -m'
alias gd='git diff'
alias ga='git add'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# change directory shortcuts
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'
alias ......='cd ../../../../../'

# aliases for my inability to type correctly
alias bi='vi'
alias ci='vi'

# Access to machines
alias nrg='ssh odando@nrg.inf.ed.ac.uk'
alias syn='ssh odando@synprot.inf.ed.ac.uk'
alias cbdr='ssh odando@cbdrcompute.inf.ed.ac.uk'

# Use Vi mode
set -o vi

# Set default editor to vi
export EDITOR=vi

# Allow Ctrl+S, Ctrl+Q to work in Vim
stty -ixon -ixoff

# Ctrl+D must be pressed twice
export IGNOREEOF=1

# colorful man pages
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m' # end the info box
export LESS_TERMCAP_so=$'\E[01;42;30m' # begin the info box
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# quick calculator
function c() { echo "$*" | bc -l; }

# view head and tail of a file
function ends() { (head;echo;tail) < $1; }

# Commands for jumping around the file system.
# From: http://jeroenjanssens.com/2013/08/16/quickly-navigate-your-filesystem-from-the-command-line.html

export MARKPATH=$HOME/.marks

function jump { 
            cd -P "$MARKPATH/$1" 2>/dev/null || echo "No such mark: $1"
}

function mark { 
            mkdir -p "$MARKPATH"; ln -s "$(pwd)" "$MARKPATH/$1"
}

function unmark { 
            rm "$MARKPATH/$1"
}

function marks {
            \ls -l "$MARKPATH" | tail -n +2 | sed 's/  / /g' | cut -d' ' -f9- | awk -F ' -> ' '{printf "%-10s -> %s\n", $1, $2}'
}

_completemarks() {
          local curw=${COMP_WORDS[COMP_CWORD]}
                  local wordlist=$(find $MARKPATH -type l -exec basename {} \;)
                            COMPREPLY=($(compgen -W '${wordlist[@]}' -- "$curw"))
                                        return 0
}

complete -F _completemarks jump unmark

# Initialise Powerline
. $PYTHON_2_7_SITE_PACKAGES/powerline/bindings/bash/powerline.sh
